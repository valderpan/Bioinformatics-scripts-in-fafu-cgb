# #!/usr/bin/env python3
# -*- encoding:utf-8 -*-

import pandas as pd
import argparse

diff_gene_list = []
diff_gene_dict = {}

def Get_diff_gene_id(diff_gene):
    gene_counts_matrix = pd.read_csv(diff_gene,sep=',')
    for i in gene_counts_matrix.iloc[:,0]:
        diff_gene_list.append(i)
    return  diff_gene_list


def GainDiffGeneCounts_from_matrix(all_counts):
    all_gene_counts = pd.read_table(all_counts,sep = '\t')
    global first_diff_gene
    first_diff_gene = all_gene_counts[all_gene_counts.iloc[:,0].str.contains(diff_gene_list[0])]
    for i in range(1,len(diff_gene_list)):
        diff_gene_dict[i] = all_gene_counts[all_gene_counts.Geneid.str.contains(diff_gene_list[i])]
        if i < len(diff_gene_list):
            first_diff_gene = pd.concat([first_diff_gene,diff_gene_dict[i]])

    return  first_diff_gene


def main(args):
    diff_gene_id = args.deg
    all_gene_counts = args.all
    diff_gene_counts = args.o
    Get_diff_gene_id(diff_gene_id)
    GainDiffGeneCounts_from_matrix(all_gene_counts)
    first_diff_gene.to_excel(diff_gene_counts, header=True, index=False)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        prog='gain_diffgene_counts.py',
        description='''This script is used to extract the differentially expressed gene quantitative 
                       matrix based on the differentially expressed gene ID obtained in DESeq2''')
    parser.add_argument('-deg',required=True,help='Import differentially expressed gene files generated by DESeq2')
    parser.add_argument('-all',required=True,help='Import gene quantification files generated by featurecounts or htseq')
    parser.add_argument('-o',dest = 'output',required=True,help='please define a filename to place your result file')
    args = parser.parse_args()
    main(args)